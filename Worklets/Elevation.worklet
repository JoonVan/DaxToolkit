//=============================================================================
//
//  Copyright (c) Kitware, Inc.
//  All rights reserved.
//  See LICENSE.txt for details.
//
//  This software is distributed WITHOUT ANY WARRANTY; without even
//  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
//  PURPOSE.  See the above copyright notice for more information.
//
//  Copyright 2012 Sandia Corporation.
//  Under the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,
//  the U.S. Government retains certain rights in this software.
//
//=============================================================================
#ifndef __Elevation_worklet_
#define __Elevation_worklet_

#include <dax/exec/Cell.h>
#include <dax/exec/Field.h>
#include <dax/exec/WorkMapField.h>
#include <dax/exec/math/VectorAnalysis.h>

namespace dax {
namespace worklet {

DAX_WORKLET void Elevation(const dax::Vector3 &inCoordinates,
                           dax::Scalar &elevation)
{
  // TODO: This is not an elevation calculation.  Rather, it is the distance
  // to the origin, which is different.  However, I am leaving like this
  // for now because this is the old calculation, and I want to measure
  // consistent timings for now.
  elevation = dax::exec::math::Magnitude(inCoordinates);
}

}
}
#endif
