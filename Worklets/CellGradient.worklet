//=============================================================================
//
//  Copyright (c) Kitware, Inc.
//  All rights reserved.
//  See LICENSE.txt for details.
//
//  This software is distributed WITHOUT ANY WARRANTY; without even
//  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
//  PURPOSE.  See the above copyright notice for more information.
//
//  Copyright 2012 Sandia Corporation.
//  Under the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,
//  the U.S. Government retains certain rights in this software.
//
//=============================================================================
#ifndef __CellGradient_worklet_
#define __CellGradient_worklet_

#include <dax/exec/Cell.h>
#include <dax/exec/Derivative.h>
#include <dax/exec/ParametricCoordinates.h>
#include <dax/exec/WorkletMapCell.h>


namespace dax {
namespace worklet {

class CellGradient : public dax::exec::WorkletMapCell
{
public:
  template<class CellType>
  DAX_EXEC_EXPORT
  void operator()(
      const CellType &cell,
      const dax::Tuple<dax::Vector3,CellType::NUM_POINTS> &coords,
      const dax::Tuple<dax::Scalar,CellType::NUM_POINTS> &pointField,
      dax::Vector3 &gradient) const
  {
    dax::Vector3 parametricCellCenter =
        dax::exec::ParametricCoordinates<CellType>::Center();
    gradient = dax::exec::CellDerivative(cell,
                                         parametricCellCenter,
                                         coords,
                                         pointField);
  }

  // Special version for Voxel elements (which need no vertex coordinates).
  DAX_EXEC_EXPORT
  void operator()(
      const dax::exec::CellVoxel &cell,
      const dax::Tuple<dax::Scalar,dax::exec::CellVoxel::NUM_POINTS>&pointField,
      dax::Vector3 &gradient) const
  {
    dax::Vector3 parametricCellCenter =
        dax::exec::ParametricCoordinates<dax::exec::CellVoxel>::Center();
    gradient = dax::exec::CellDerivative(cell,
                                         parametricCellCenter,
                                         pointField);
  }
};

}
} // namespace dax::worklet

#endif
