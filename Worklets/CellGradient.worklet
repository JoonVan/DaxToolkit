//=============================================================================
//
//  Copyright (c) Kitware, Inc.
//  All rights reserved.
//  See LICENSE.txt for details.
//
//  This software is distributed WITHOUT ANY WARRANTY; without even
//  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
//  PURPOSE.  See the above copyright notice for more information.
//
//  Copyright 2012 Sandia Corporation.
//  Under the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,
//  the U.S. Government retains certain rights in this software.
//
//=============================================================================
#ifndef __CellGradient_worklet_
#define __CellGradient_worklet_

#include <dax/exec/Cell.h>
#include <dax/exec/Derivative.h>
#include <dax/exec/Field.h>
#include <dax/exec/WorkMapCell.h>


namespace dax {
namespace worklet {

template<class CellType, class ExecutionAdapter>
DAX_WORKLET void CellGradient(
    dax::exec::WorkMapCell<CellType, ExecutionAdapter> &work,
    dax::exec::FieldCoordinatesIn<ExecutionAdapter> points,
    dax::exec::FieldPointIn<dax::Scalar, ExecutionAdapter> &point_attribute,
    dax::exec::FieldCellOut<dax::Vector3, ExecutionAdapter> &cell_attribute)
{
  dax::Vector3 parametricCellCenter = dax::make_Vector3(0.5, 0.5, 0.5);
  CellType cell = work.GetCell();

  dax::Vector3 value = dax::exec::cellDerivative(work,
                                                 cell,
                                                 parametricCellCenter,
                                                 points,
                                                 point_attribute);
  work.SetFieldValue(cell_attribute, value);
}
}
}
#endif
