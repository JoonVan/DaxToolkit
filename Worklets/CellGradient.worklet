/*=========================================================================

  This software is distributed WITHOUT ANY WARRANTY; without even
  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
  PURPOSE.  See the above copyright notice for more information.

===========================================================================*/
#ifndef __CellGradient_worklet_
#define __CellGradient_worklet_

#include <dax/exec/Cell.h>
#include <dax/exec/Derivative.h>
#include <dax/exec/Field.h>
#include <dax/exec/WorkMapCell.h>

template<class CellType>
DAX_WORKLET void CellGradient(
    DAX_IN dax::exec::WorkMapCell<CellType> &work,
    DAX_IN const dax::exec::FieldCoordinates points,
    DAX_IN const dax::exec::FieldPoint<dax::Scalar> &point_attribute,
    DAX_OUT dax::exec::FieldCell<dax::Vector3> &cell_attribute)
{
  dax::Vector3 parametricCellCenter = dax::make_Vector3(0.5, 0.5, 0.5);
  CellType cell = work.GetCell();

  dax::Vector3 value = dax::exec::cellDerivative(work,
                                                 cell,
                                                 parametricCellCenter,
                                                 points,
                                                 point_attribute);
  work.SetFieldValue(cell_attribute, value);
}
#endif
