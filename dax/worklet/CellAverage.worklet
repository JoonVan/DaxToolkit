//=============================================================================
//
//  Copyright (c) Kitware, Inc.
//  All rights reserved.
//  See LICENSE.txt for details.
//
//  This software is distributed WITHOUT ANY WARRANTY; without even
//  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
//  PURPOSE.  See the above copyright notice for more information.
//
//  Copyright 2012 Sandia Corporation.
//  Under the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,
//  the U.S. Government retains certain rights in this software.
//
//=============================================================================
#ifndef __CellAverage_worklet_
#define __CellAverage_worklet_

#include <dax/exec/Cell.h>
#include <dax/exec/WorkletMapCell.h>
#include <dax/exec/WorkletMapField.h>

namespace dax {
namespace worklet {

class CellAverage : public dax::exec::WorkletMapCell
{
public:

  typedef void ControlSignature(Field(Point), Field(Out));
  typedef _2 ExecutionSignature(_1);

  template<class CellType>
  DAX_EXEC_EXPORT
  dax::Scalar operator()(
    const dax::Tuple<dax::Scalar, CellType::NUM_POINTS>& pointField) const
  {
    CellType cell;
    dax::Scalar avg = 0.0;
    dax::Id numberOfPoints = cell.GetNumberOfPoints();
    for (dax::Id i=0; i < numberOfPoints; ++i)
      {
      dax::exec::WorkletMapField pointWork= cell.GetNumberOfPoints();
      avg += pointField.GetScalar(pointWork);
      }
    return avg /= numberOfPoints;
  }
};
}
}
#endif
